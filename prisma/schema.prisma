// Prisma docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Group {
  id           String        @id
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  signupStates SignupState[]
  players      Player[]
}

model SignupState {
  id               Int      @id @default(autoincrement())
  createdAt        DateTime @default(now())
  groupId          String
  group            Group    @relation(fields: [groupId], references: [id])
  fileName         String
  takenAt          DateTime
  // This is an array of server/lib/signup_state/court_signup.ts#CourtSignup. It is stored as a JSON
  // blob instead of normalized to reduce the number of DB writes on upload as prisma ends up
  // writing the players in one by one.
  courtSignupState Json
  active           Boolean  @default(false)

  @@index([groupId])
}

model Player {
  id       Int    @id @default(autoincrement())
  groupId  String
  group    Group  @relation(fields: [groupId], references: [id])
  username String
  password String

  @@unique(fields: [groupId, username], name: "groupAndUsername")
  @@index([groupId])
}

model GoogleVisionRequest {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  imageHash String   @unique
  fileName  String
  result    Json?

  // used to check total requests for a month to avoid exceeding free tier
  @@index([createdAt])
}
